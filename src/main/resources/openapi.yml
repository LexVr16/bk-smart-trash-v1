openapi: 3.0.1
info:
  title: API Smart Trash V1
  description: API para la automatización de recolección de basura
  version: 1.0.0

servers:
  - url: http://localhost:7071

paths:
  /usuarios:
    get:
      summary: Obtener todos los usuarios
      operationId: getUsuarios
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
  /usuarios/create:
    post:
      summary: Crear un nuevo usuario
      operationId: postCreateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
  /usuarios/{idUsuario}:
    parameters:
      - in: path
        name: idUsuario
        required: true
        description: ID del usuario a actualizar o eliminar
        schema:
          type: string
    get:
      summary: Obtener un usuario por ID
      operationId: obtenerUsuarioPorID
      responses:
        '200':
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
  /usuarios/{idUsuario}/update:
    parameters:
      - in: path
        name: idUsuario
        required: true
        description: ID del usuario a actualizar o eliminar
        schema:
          type: string
    put:
      summary: Actualizar un usuario por ID
      operationId: actualizarUsuarioPorID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
  /usuarios/{idUsuario}/delete:
    parameters:
      - in: path
        name: idUsuario
        required: true
        description: ID del usuario a actualizar o eliminar
        schema:
          type: string
    delete:
      summary: Eliminar un usuario por ID
      operationId: eliminarUsuarioPorID
      responses:
        '204':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado
components:
  schemas:
    Usuario:
      type: object
      properties:
        idUsuario:
          type: string
          description: ID único del usuario (clave primaria)
        dni:
          type: string
          description: Número de documento de identidad del usuario
          pattern: "^[0-9]{8}$"
        nombres:
          type: string
          description: Nombres del usuario
        apellidos:
          type: string
          description: Apellidos del usuario
        email:
          type: string
          format: email
          description: Dirección de correo electrónico del usuario
        password:
          type: string
          format: password
          description: Contraseña del usuario (almacenada como VARBINARY en la base de datos)
      required:
        - idUsuario
        - dni
        - password
